
a.out:     file format elf64-x86-64


Disassembly of section .interp:

0000000000000318 <.interp>:
 318:	2f                   	(bad)  
 319:	6c                   	ins    BYTE PTR es:[rdi],dx
 31a:	69 62 36 34 2f 6c 64 	imul   esp,DWORD PTR [rdx+0x36],0x646c2f34
 321:	2d 6c 69 6e 75       	sub    eax,0x756e696c
 326:	78 2d                	js     355 <__abi_tag-0x47>
 328:	78 38                	js     362 <__abi_tag-0x3a>
 32a:	36 2d 36 34 2e 73    	ss sub eax,0x732e3436
 330:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 331:	2e 32 00             	cs xor al,BYTE PTR [rax]

Disassembly of section .note.gnu.property:

0000000000000338 <.note.gnu.property>:
 338:	04 00                	add    al,0x0
 33a:	00 00                	add    BYTE PTR [rax],al
 33c:	30 00                	xor    BYTE PTR [rax],al
 33e:	00 00                	add    BYTE PTR [rax],al
 340:	05 00 00 00 47       	add    eax,0x47000000
 345:	4e 55                	rex.WRX push rbp
 347:	00 02                	add    BYTE PTR [rdx],al
 349:	80 00 c0             	add    BYTE PTR [rax],0xc0
 34c:	04 00                	add    al,0x0
 34e:	00 00                	add    BYTE PTR [rax],al
 350:	01 00                	add    DWORD PTR [rax],eax
 352:	00 00                	add    BYTE PTR [rax],al
 354:	00 00                	add    BYTE PTR [rax],al
 356:	00 00                	add    BYTE PTR [rax],al
 358:	01 00                	add    DWORD PTR [rax],eax
main>:
    1070:	41 54                	push   r12
    1072:	4c 8d 25 87 01 00 00 	lea    r12,[rip+0x187]        # 1200 <Tsum>
    1079:	31 c9                	xor    ecx,ecx
    107b:	31 f6                	xor    esi,esi
    107d:	4c 89 e2             	mov    rdx,r12
    1080:	48 83 ec 20          	sub    rsp,0x20
    1084:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    108b:	00 00 
    108d:	48 89 44 24 18       	mov    QWORD PTR [rsp+0x18],rax
    1092:	31 c0                	xor    eax,eax
    1094:	48 8d 7c 24 08       	lea    rdi,[rsp+0x8]
    1099:	e8 b2 ff ff ff       	call   1050 <pthread_create@plt>
    109e:	31 c9                	xor    ecx,ecx
    10a0:	4c 89 e2             	mov    rdx,r12
    10a3:	31 f6                	xor    esi,esi
    10a5:	48 8d 7c 24 10       	lea    rdi,[rsp+0x10]
    10aa:	e8 a1 ff ff ff       	call   1050 <pthread_create@plt>
    10af:	48 8b 7c 24 08       	mov    rdi,QWORD PTR [rsp+0x8]
    10b4:	31 f6                	xor    esi,esi
    10b6:	e8 a5 ff ff ff       	call   1060 <pthread_join@plt>
    10bb:	48 8b 7c 24 10       	mov    rdi,QWORD PTR [rsp+0x10]
    10c0:	31 f6                	xor    esi,esi
    10c2:	e8 99 ff ff ff       	call   1060 <pthread_join@plt>
    10c7:	48 8b 35 82 2f 00 00 	mov    rsi,QWORD PTR [rip+0x2f82]        # 4050 <sum>
    10ce:	31 c0                	xor    eax,eax
    10d0:	48 8d 3d 2d 0f 00 00 	lea    rdi,[rip+0xf2d]        # 2004 <_IO_stdin_used+0x4>
    10d7:	e8 64 ff ff ff       	call   1040 <printf@plt>
    10dc:	48 8b 44 24 18       	mov    rax,QWORD PTR [rsp+0x18]
    10e1:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    10e8:	00 00 
    10ea:	75 09                	jne    10f5 <main+0x85>
    10ec:	48 83 c4 20          	add    rsp,0x20
    10f0:	31 c0                	xor    eax,eax
    10f2:	41 5c                	pop    r12
    10f4:	c3                   	ret    
    10f5:	e8 36 ff ff ff       	call   1030 <__stack_chk_fail@plt>
    10fa:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

0000000000001100 <_start>:
    1100:	f3 0f 1e fa          	endbr64 
    1104:	31 ed                	xor    ebp,ebp
    1106:	49 89 d1             	mov    r9,rdx
    1109:	5e                   	pop    rsi
    110a:	48 89 e2             	mov    rdx,rsp
    110d:	48 83 e4 f0          	and    rsp,0xfffffffffffffff0
    1111:	50                   	push   rax
    1112:	54                   	push   rsp
    1113:	45 31 c0             	xor    r8d,r8d
    1116:	31 c9                	xor    ecx,ecx
    1118:	48 8d 3d 51 ff ff ff 	lea    rdi,[rip+0xffffffffffffff51]        # 1070 <main>
    111f:	ff 15 b3 2e 00 00    	call   QWORD PTR [rip+0x2eb3]        # 3fd8 <__libc_start_main@GLIBC_2.34>
    1125:	f4                   	hlt    
    1126:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    112d:	00 00 00 

0000000000001130 <deregister_tm_clones>:
    1130:	48 8d 3d 11 2f 00 00 	lea    rdi,[rip+0x2f11]        # 4048 <__TMC_END__>
    1137:	48 8d 05 0a 2f 00 00 	lea    rax,[rip+0x2f0a]        # 4048 <__TMC_END__>
    113e:	48 39 f8             	cmp    rax,rdi
    1141:	74 15                	je     1158 <deregister_tm_clones+0x28>
    1143:	48 8b 05 96 2e 00 00 	mov    rax,QWORD PTR [rip+0x2e96]        # 3fe0 <_ITM_deregisterTMCloneTable@Base>
    114a:	48 85 c0             	test   rax,rax
    114d:	74 09                	je     1158 <deregister_tm_clones+0x28>
    114f:	ff e0                	jmp    rax
    1151:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
    1158:	c3                   	ret    
    1159:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]

0000000000001160 <register_tm_clones>:
    1160:	48 8d 3d e1 2e 00 00 	lea    rdi,[rip+0x2ee1]        # 4048 <__TMC_END__>
    1167:	48 8d 35 da 2e 00 00 	lea    rsi,[rip+0x2eda]        # 4048 <__TMC_END__>
    116e:	48 29 fe             	sub    rsi,rdi
    1171:	48 89 f0             	mov    rax,rsi
    1174:	48 c1 ee 3f          	shr    rsi,0x3f
    1178:	48 c1 f8 03          	sar    rax,0x3
    117c:	48 01 c6             	add    rsi,rax
    117f:	48 d1 fe             	sar    rsi,1
    1182:	74 14                	je     1198 <register_tm_clones+0x38>
    1184:	48 8b 05 65 2e 00 00 	mov    rax,QWORD PTR [rip+0x2e65]        # 3ff0 <_ITM_registerTMCloneTable@Base>
    118b:	48 85 c0             	test   rax,rax
    118e:	74 08                	je     1198 <register_tm_clones+0x38>
    1190:	ff e0                	jmp    rax
    1192:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
    1198:	c3                   	ret    
    1199:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]

00000000000011a0 <__do_global_dtors_aux>:
    11a0:	f3 0f 1e fa          	endbr64 
    11a4:	80 3d 9d 2e 00 00 00 	cmp    BYTE PTR [rip+0x2e9d],0x0        # 4048 <__TMC_END__>
    11ab:	75 33                	jne    11e0 <__do_global_dtors_aux+0x40>
    11ad:	55                   	push   rbp
    11ae:	48 83 3d 42 2e 00 00 	cmp    QWORD PTR [rip+0x2e42],0x0        # 3ff8 <__cxa_finalize@GLIBC_2.2.5>
    11b5:	00 
    11b6:	48 89 e5             	mov    rbp,rsp
    11b9:	74 0d                	je     11c8 <__do_global_dtors_aux+0x28>
    11bb:	48 8b 3d 7e 2e 00 00 	mov    rdi,QWORD PTR [rip+0x2e7e]        # 4040 <__dso_handle>
    11c2:	ff 15 30 2e 00 00    	call   QWORD PTR [rip+0x2e30]        # 3ff8 <__cxa_finalize@GLIBC_2.2.5>
    11c8:	e8 63 ff ff ff       	call   1130 <deregister_tm_clones>
    11cd:	c6 05 74 2e 00 00 01 	mov    BYTE PTR [rip+0x2e74],0x1        # 4048 <__TMC_END__>
    11d4:	5d                   	pop    rbp
    11d5:	c3                   	ret    
    11d6:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    11dd:	00 00 00 
    11e0:	c3                   	ret    
    11e1:	66 66 2e 0f 1f 84 00 	data16 cs nop WORD PTR [rax+rax*1+0x0]
    11e8:	00 00 00 00 
    11ec:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

00000000000011f0 <frame_dummy>:
    11f0:	f3 0f 1e fa          	endbr64 
    11f4:	e9 67 ff ff ff       	jmp    1160 <register_tm_clones>
    11f9:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]

0000000000001200 <Tsum>:
    1200:	48 81 05 45 2e 00 00 	add    QWORD PTR [rip+0x2e45],0x5f5e100        # 4050 <sum>
    1207:	00 e1 f5 05 
    120b:	c3                   	ret    

Disassembly of section .fini:

000000000000120c <_fini>:
    120c:	f3 0f 1e fa          	endbr64 
    1210:	48 83 ec 08          	sub    rsp,0x8
    1214:	48 83 c4 08          	add    rsp,0x8
    1218:	c3                   	ret    

Disassembly of section .rodata:

0000000000002000 <_IO_stdin_used>:
    2000:	01 00                	add    DWORD PTR [rax],eax
    2002:	02 00                	add    al,BYTE PTR [rax]
    2004:	73 75                	jae    207b <__GNU_EH_FRAME_HDR+0x6b>
    2006:	6d                   	ins    DWORD PTR es:[rdi],dx
    2007:	20 3a                	and    BYTE PTR [rdx],bh
    2009:	20                   	.byte 0x20
    200a:	25                   	.byte 0x25
    200b:	6c                   	ins    BYTE PTR es:[rdi],dx
    200c:	64                   	fs
	...

Disassembly of section .eh_frame_hdr:

0000000000002010 <__GNU_EH_FRAME_HDR>:
    2010:	01 1b                	add    DWORD PTR [rbx],ebx
    2012:	03 3b                	add    edi,DWORD PTR [rbx]
    2014:	2c 00                	sub    al,0x0
    2016:	00 00                	add    BYTE PTR [rax],al
    2018:	04 00                	add    al,0x0
    201a:	00 00                	add    BYTE PTR [rax],al
    201c:	10 f0                	adc    al,dh
    201e:	ff                   	(bad)  
    201f:	ff 60 00             	jmp    QWORD PTR [rax+0x0]
    2022:	00 00                	add    BYTE PTR [rax],al
    2024:	60                   	(bad)  
    2025:	f0 ff                	lock (bad) 
    2027:	ff 9c 00 00 00 f0 f0 	call   FWORD PTR [rax+rax*1-0xf100000]
    202e:	ff                   	(bad)  
    202f:	ff 48 00             	dec    DWORD PTR [rax+0x0]
    2032:	00 00                	add    BYTE PTR [rax],al
    2034:	f0 f1                	lock int1 
    2036:	ff                   	(bad)  
    2037:	ff                   	.byte 0xff
    2038:	88 00                	mov    BYTE PTR [rax],al
	...

Disassembly of section .eh_frame:

0000000000002040 <__FRAME_END__-0x90>:
    2040:	14 00                	adc    al,0x0
    2042:	00 00                	add    BYTE PTR [rax],al
    2044:	00 00                	add    BYTE PTR [rax],al
    2046:	00 00                	add    BYTE PTR [rax],al
    2048:	01 7a 52             	add    DWORD PTR [rdx+0x52],edi
    204b:	00 01                	add    BYTE PTR [rcx],al
    204d:	78 10                	js     205f <__GNU_EH_FRAME_HDR+0x4f>
    204f:	01 1b                	add    DWORD PTR [rbx],ebx
    2051:	0c 07                	or     al,0x7
    2053:	08 90 01 00 00 14    	or     BYTE PTR [rax+0x14000001],dl
    2059:	00 00                	add    BYTE PTR [rax],al
    205b:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    205e:	00 00                	add    BYTE PTR [rax],al
    2060:	a0 f0 ff ff 26 00 00 	movabs al,ds:0x26fffff0
    2067:	00 00 
    2069:	44 07                	rex.R (bad) 
    206b:	10 00                	adc    BYTE PTR [rax],al
    206d:	00 00                	add    BYTE PTR [rax],al
    206f:	00 24 00             	add    BYTE PTR [rax+rax*1],ah
    2072:	00 00                	add    BYTE PTR [rax],al
    2074:	34 00                	xor    al,0x0
    2076:	00 00                	add    BYTE PTR [rax],al
    2078:	a8 ef                	test   al,0xef
    207a:	ff                   	(bad)  
    207b:	ff 50 00             	call   QWORD PTR [rax+0x0]
    207e:	00 00                	add    BYTE PTR [rax],al
    2080:	00 0e                	add    BYTE PTR [rsi],cl
    2082:	10 46 0e             	adc    BYTE PTR [rsi+0xe],al
    2085:	18 4a 0f             	sbb    BYTE PTR [rdx+0xf],cl
    2088:	0b 77 08             	or     esi,DWORD PTR [rdi+0x8]
    208b:	80 00 3f             	add    BYTE PTR [rax],0x3f
    208e:	1a 3b                	sbb    bh,BYTE PTR [rbx]
    2090:	2a 33                	sub    dh,BYTE PTR [rbx]
    2092:	24 22                	and    al,0x22
    2094:	00 00                	add    BYTE PTR [rax],al
    2096:	00 00                	add    BYTE PTR [rax],al
    2098:	10 00                	adc    BYTE PTR [rax],al
    209a:	00 00                	add    BYTE PTR [rax],al
    209c:	5c                   	pop    rsp
    209d:	00 00                	add    BYTE PTR [rax],al
    209f:	00 60 f1             	add    BYTE PTR [rax-0xf],ah
    20a2:	ff                   	(bad)  
    20a3:	ff 0c 00             	dec    DWORD PTR [rax+rax*1]
    20a6:	00 00                	add    BYTE PTR [rax],al
    20a8:	00 00                	add    BYTE PTR [rax],al
    20aa:	00 00                	add    BYTE PTR [rax],al
    20ac:	20 00                	and    BYTE PTR [rax],al
    20ae:	00 00                	add    BYTE PTR [rax],al
    20b0:	70 00                	jo     20b2 <__GNU_EH_FRAME_HDR+0xa2>
    20b2:	00 00                	add    BYTE PTR [rax],al
    20b4:	bc ef ff ff 8a       	mov    esp,0x8affffef
    20b9:	00 00                	add    BYTE PTR [rax],al
    20bb:	00 00                	add    BYTE PTR [rax],al
    20bd:	42 0e                	rex.X (bad) 
    20bf:	10 8c 02 52 0e 30 02 	adc    BYTE PTR [rdx+rax*1+0x2300e52],cl
    20c6:	6c                   	ins    BYTE PTR es:[rdi],dx
    20c7:	0a 0e                	or     cl,BYTE PTR [rsi]
    20c9:	10 44 0e 08          	adc    BYTE PTR [rsi+rcx*1+0x8],al
    20cd:	41 0b 00             	or     eax,DWORD PTR [r8]

00000000000020d0 <__FRAME_END__>:
    20d0:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .init_array:

0000000000003de8 <__frame_dummy_init_array_entry>:
    3de8:	f0 11 00             	lock adc DWORD PTR [rax],eax
    3deb:	00 00                	add    BYTE PTR [rax],al
    3ded:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .fini_array:

0000000000003df0 <__do_global_dtors_aux_fini_array_entry>:
    3df0:	a0                   	.byte 0xa0
    3df1:	11 00                	adc    DWORD PTR [rax],eax
    3df3:	00 00                	add    BYTE PTR [rax],al
    3df5:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .dynamic:

0000000000003df8 <_DYNAMIC>:
    3df8:	01 00                	add    DWORD PTR [rax],eax
    3dfa:	00 00                	add    BYTE PTR [rax],al
    3dfc:	00 00                	add    BYTE PTR [rax],al
    3dfe:	00 00                	add    BYTE PTR [rax],al
    3e00:	56                   	push   rsi
    3e01:	00 00                	add    BYTE PTR [rax],al
    3e03:	00 00                	add    BYTE PTR [rax],al
    3e05:	00 00                	add    BYTE PTR [rax],al
    3e07:	00 0c 00             	add    BYTE PTR [rax+rax*1],cl
    3e0a:	00 00                	add    BYTE PTR [rax],al
    3e0c:	00 00                	add    BYTE PTR [rax],al
    3e0e:	00 00                	add    BYTE PTR [rax],al
    3e10:	00 10                	add    BYTE PTR [rax],dl
    3e12:	00 00                	add    BYTE PTR [rax],al
    3e14:	00 00                	add    BYTE PTR [rax],al
    3e16:	00 00                	add    BYTE PTR [rax],al
    3e18:	0d 00 00 00 00       	or     eax,0x0
    3e1d:	00 00                	add    BYTE PTR [rax],al
    3e1f:	00 0c 12             	add    BYTE PTR [rdx+rdx*1],cl
    3e22:	00 00                	add    BYTE PTR [rax],al
    3e24:	00 00                	add    BYTE PTR [rax],al
    3e26:	00 00                	add    BYTE PTR [rax],al
    3e28:	19 00                	sbb    DWORD PTR [rax],eax
    3e2a:	00 00                	add    BYTE PTR [rax],al
    3e2c:	00 00                	add    BYTE PTR [rax],al
    3e2e:	00 00                	add    BYTE PTR [rax],al
    3e30:	e8 3d 00 00 00       	call   3e72 <_DYNAMIC+0x7a>
    3e35:	00 00                	add    BYTE PTR [rax],al
    3e37:	00 1b                	add    BYTE PTR [rbx],bl
    3e39:	00 00                	add    BYTE PTR [rax],al
    3e3b:	00 00                	add    BYTE PTR [rax],al
    3e3d:	00 00                	add    BYTE PTR [rax],al
    3e3f:	00 08                	add    BYTE PTR [rax],cl
    3e41:	00 00                	add    BYTE PTR [rax],al
    3e43:	00 00                	add    BYTE PTR [rax],al
    3e45:	00 00                	add    BYTE PTR [rax],al
    3e47:	00 1a                	add    BYTE PTR [rdx],bl
    3e49:	00 00                	add    BYTE PTR [rax],al
    3e4b:	00 00                	add    BYTE PTR [rax],al
    3e4d:	00 00                	add    BYTE PTR [rax],al
    3e4f:	00 f0                	add    al,dh
    3e51:	3d 00 00 00 00       	cmp    eax,0x0
    3e56:	00 00                	add    BYTE PTR [rax],al
    3e58:	1c 00                	sbb    al,0x0
    3e5a:	00 00                	add    BYTE PTR [rax],al
    3e5c:	00 00                	add    BYTE PTR [rax],al
    3e5e:	00 00                	add    BYTE PTR [rax],al
    3e60:	08 00                	or     BYTE PTR [rax],al
    3e62:	00 00                	add    BYTE PTR [rax],al
    3e64:	00 00                	add    BYTE PTR [rax],al
    3e66:	00 00                	add    BYTE PTR [rax],al
    3e68:	f5                   	cmc    
    3e69:	fe                   	(bad)  
    3e6a:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
    3e6d:	00 00                	add    BYTE PTR [rax],al
    3e6f:	00 c0                	add    al,al
    3e71:	03 00                	add    eax,DWORD PTR [rax]
    3e73:	00 00                	add    BYTE PTR [rax],al
    3e75:	00 00                	add    BYTE PTR [rax],al
    3e77:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 3e7d <_DYNAMIC+0x85>
    3e7d:	00 00                	add    BYTE PTR [rax],al
    3e7f:	00 d0                	add    al,dl
    3e81:	04 00                	add    al,0x0
    3e83:	00 00                	add    BYTE PTR [rax],al
    3e85:	00 00                	add    BYTE PTR [rax],al
    3e87:	00 06                	add    BYTE PTR [rsi],al
    3e89:	00 00                	add    BYTE PTR [rax],al
    3e8b:	00 00                	add    BYTE PTR [rax],al
    3e8d:	00 00                	add    BYTE PTR [rax],al
    3e8f:	00 e0                	add    al,ah
    3e91:	03 00                	add    eax,DWORD PTR [rax]
    3e93:	00 00                	add    BYTE PTR [rax],al
    3e95:	00 00                	add    BYTE PTR [rax],al
    3e97:	00 0a                	add    BYTE PTR [rdx],cl
    3e99:	00 00                	add    BYTE PTR [rax],al
    3e9b:	00 00                	add    BYTE PTR [rax],al
    3e9d:	00 00                	add    BYTE PTR [rax],al
    3e9f:	00 c6                	add    dh,al
    3ea1:	00 00                	add    BYTE PTR [rax],al
    3ea3:	00 00                	add    BYTE PTR [rax],al
    3ea5:	00 00                	add    BYTE PTR [rax],al
    3ea7:	00 0b                	add    BYTE PTR [rbx],cl
    3ea9:	00 00                	add    BYTE PTR [rax],al
    3eab:	00 00                	add    BYTE PTR [rax],al
    3ead:	00 00                	add    BYTE PTR [rax],al
    3eaf:	00 18                	add    BYTE PTR [rax],bl
    3eb1:	00 00                	add    BYTE PTR [rax],al
    3eb3:	00 00                	add    BYTE PTR [rax],al
    3eb5:	00 00                	add    BYTE PTR [rax],al
    3eb7:	00 15 00 00 00 00    	add    BYTE PTR [rip+0x0],dl        # 3ebd <_DYNAMIC+0xc5>
	...
    3ec5:	00 00                	add    BYTE PTR [rax],al
    3ec7:	00 03                	add    BYTE PTR [rbx],al
	...
    3ed1:	40 00 00             	rex add BYTE PTR [rax],al
    3ed4:	00 00                	add    BYTE PTR [rax],al
    3ed6:	00 00                	add    BYTE PTR [rax],al
    3ed8:	02 00                	add    al,BYTE PTR [rax]
    3eda:	00 00                	add    BYTE PTR [rax],al
    3edc:	00 00                	add    BYTE PTR [rax],al
    3ede:	00 00                	add    BYTE PTR [rax],al
    3ee0:	60                   	(bad)  
    3ee1:	00 00                	add    BYTE PTR [rax],al
    3ee3:	00 00                	add    BYTE PTR [rax],al
    3ee5:	00 00                	add    BYTE PTR [rax],al
    3ee7:	00 14 00             	add    BYTE PTR [rax+rax*1],dl
    3eea:	00 00                	add    BYTE PTR [rax],al
    3eec:	00 00                	add    BYTE PTR [rax],al
    3eee:	00 00                	add    BYTE PTR [rax],al
    3ef0:	07                   	(bad)  
    3ef1:	00 00                	add    BYTE PTR [rax],al
    3ef3:	00 00                	add    BYTE PTR [rax],al
    3ef5:	00 00                	add    BYTE PTR [rax],al
    3ef7:	00 17                	add    BYTE PTR [rdi],dl
    3ef9:	00 00                	add    BYTE PTR [rax],al
    3efb:	00 00                	add    BYTE PTR [rax],al
    3efd:	00 00                	add    BYTE PTR [rax],al
    3eff:	00 b0 06 00 00 00    	add    BYTE PTR [rax+0x6],dh
    3f05:	00 00                	add    BYTE PTR [rax],al
    3f07:	00 07                	add    BYTE PTR [rdi],al
    3f09:	00 00                	add    BYTE PTR [rax],al
    3f0b:	00 00                	add    BYTE PTR [rax],al
    3f0d:	00 00                	add    BYTE PTR [rax],al
    3f0f:	00 f0                	add    al,dh
    3f11:	05 00 00 00 00       	add    eax,0x0
    3f16:	00 00                	add    BYTE PTR [rax],al
    3f18:	08 00                	or     BYTE PTR [rax],al
    3f1a:	00 00                	add    BYTE PTR [rax],al
    3f1c:	00 00                	add    BYTE PTR [rax],al
    3f1e:	00 00                	add    BYTE PTR [rax],al
    3f20:	c0 00 00             	rol    BYTE PTR [rax],0x0
    3f23:	00 00                	add    BYTE PTR [rax],al
    3f25:	00 00                	add    BYTE PTR [rax],al
    3f27:	00 09                	add    BYTE PTR [rcx],cl
    3f29:	00 00                	add    BYTE PTR [rax],al
    3f2b:	00 00                	add    BYTE PTR [rax],al
    3f2d:	00 00                	add    BYTE PTR [rax],al
    3f2f:	00 18                	add    BYTE PTR [rax],bl
    3f31:	00 00                	add    BYTE PTR [rax],al
    3f33:	00 00                	add    BYTE PTR [rax],al
    3f35:	00 00                	add    BYTE PTR [rax],al
    3f37:	00 fb                	add    bl,bh
    3f39:	ff                   	(bad)  
    3f3a:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
    3f3d:	00 00                	add    BYTE PTR [rax],al
    3f3f:	00 00                	add    BYTE PTR [rax],al
    3f41:	00 00                	add    BYTE PTR [rax],al
    3f43:	08 00                	or     BYTE PTR [rax],al
    3f45:	00 00                	add    BYTE PTR [rax],al
    3f47:	00 fe                	add    dh,bh
    3f49:	ff                   	(bad)  
    3f4a:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
    3f4d:	00 00                	add    BYTE PTR [rax],al
    3f4f:	00 b0 05 00 00 00    	add    BYTE PTR [rax+0x5],dh
    3f55:	00 00                	add    BYTE PTR [rax],al
    3f57:	00 ff                	add    bh,bh
    3f59:	ff                   	(bad)  
    3f5a:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
    3f5d:	00 00                	add    BYTE PTR [rax],al
    3f5f:	00 01                	add    BYTE PTR [rcx],al
    3f61:	00 00                	add    BYTE PTR [rax],al
    3f63:	00 00                	add    BYTE PTR [rax],al
    3f65:	00 00                	add    BYTE PTR [rax],al
    3f67:	00 f0                	add    al,dh
    3f69:	ff                   	(bad)  
    3f6a:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
    3f6d:	00 00                	add    BYTE PTR [rax],al
    3f6f:	00 96 05 00 00 00    	add    BYTE PTR [rsi+0x5],dl
    3f75:	00 00                	add    BYTE PTR [rax],al
    3f77:	00 f9                	add    cl,bh
    3f79:	ff                   	(bad)  
    3f7a:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
    3f7d:	00 00                	add    BYTE PTR [rax],al
    3f7f:	00 03                	add    BYTE PTR [rbx],al
	...

Disassembly of section .got:

0000000000003fd8 <.got>:
	...

Disassembly of section .got.plt:

0000000000004000 <_GLOBAL_OFFSET_TABLE_>:
    4000:	f8                   	clc    
    4001:	3d 00 00 00 00       	cmp    eax,0x0
	...
    4016:	00 00                	add    BYTE PTR [rax],al
    4018:	36 10 00             	ss adc BYTE PTR [rax],al
    401b:	00 00                	add    BYTE PTR [rax],al
    401d:	00 00                	add    BYTE PTR [rax],al
    401f:	00 46 10             	add    BYTE PTR [rsi+0x10],al
    4022:	00 00                	add    BYTE PTR [rax],al
    4024:	00 00                	add    BYTE PTR [rax],al
    4026:	00 00                	add    BYTE PTR [rax],al
    4028:	56                   	push   rsi
    4029:	10 00                	adc    BYTE PTR [rax],al
    402b:	00 00                	add    BYTE PTR [rax],al
    402d:	00 00                	add    BYTE PTR [rax],al
    402f:	00 66 10             	add    BYTE PTR [rsi+0x10],ah
    4032:	00 00                	add    BYTE PTR [rax],al
    4034:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .data:

0000000000004038 <__data_start>:
	...

0000000000004040 <__dso_handle>:
    4040:	40                   	rex
    4041:	40 00 00             	rex add BYTE PTR [rax],al
    4044:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .bss:

0000000000004048 <completed.0>:
	...

0000000000004050 <sum>:
	...

Disassembly of section .comment:

0000000000000000 <.comment>:
   0:	47                   	rex.RXB
   1:	43                   	rex.XB
   2:	43 3a 20             	rex.XB cmp spl,BYTE PTR [r8]
   5:	28 47 4e             	sub    BYTE PTR [rdi+0x4e],al
   8:	55                   	push   rbp
   9:	29 20                	sub    DWORD PTR [rax],esp
   b:	31 31                	xor    DWORD PTR [rcx],esi
   d:	2e 32 2e             	cs xor ch,BYTE PTR [rsi]
  10:	30 00                	xor    BYTE PTR [rax],al
